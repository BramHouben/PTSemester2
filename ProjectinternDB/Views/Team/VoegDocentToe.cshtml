@using Model
@model ProjectinternDB.Models.TeamViewModel

@{
    ViewData["Title"] = "VoegDocentToe";
    Docent docent = new Docent();
}
@if (Model.TeamID != 0)
{
    <h2>Voeg Docent Toe aan uw Team</h2>
}
else
{
    <h2 class="text-danger">U heeft geen Team</h2>

}

        <table>
            <thead>
                <tr>
                    <th>
                        Docent ID
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => docent.Naam)
                    </th>
                    <th>
                        Ruimte Voor Inzet
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>


                @foreach (var item in Model.DocentenZonderTeam)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DocentId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Naam)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RuimteVoorInzet)
                        </td>
                        @if (Model.TeamID != 0)
                        {
                            <td>
                                <a asp-action="VoegDocentToeAanTeam" asp-route-teamid="@Model.TeamID" asp-route-docentid="@item.DocentId">Voeg Toe Aan Team @Model.TeamID</a>
                            </td>
                        }
                    </tr>
                }
        </table>
        @if (Model.TeamID != 0)
        {
            <div>
                <a asp-action="DocentenInTeam">Terug naar uw Team</a>
            </div>
        }
        @section Scripts {
            @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        }
