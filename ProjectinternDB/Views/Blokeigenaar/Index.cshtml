@using Model.Onderwijsdelen
@model IEnumerable<Taak>

@{
    ViewData["Title"] = "Index";
}
<h2>Index</h2>

<h4>Overzicht Taken</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        
        <table>
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TaakNaam)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OnderdeelNaam)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Omschrijving)
                </th>
            
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model) {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.TaakNaam)</td>
                    @if (item.OnderdeelId == 0)
                    {
                        <td>Deze taak heeft nog geen onderdeel</td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(modelItem => item.OnderdeelNaam)</td>
                    }
                    @if (item.Omschrijving == null)
                    {
                        <td>Deze taak heeft nog geen omschrijving</td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(modelItem => item.Omschrijving)</td>
                    }
                    
                    <td>
                        <a asp-action="EditTaak" asp-route-id="@item.TaakId">Edit</a> |
                        @{
                            // TODO: Popup: weet je zeker dat je deze taak wilt verwijderen etc...
                        }
                        <a asp-action="VerwijderTaak" asp-route-id="@item.TaakId">Verwijder</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <a asp-action="TaakToevoegen">Taak Toevoegen</a>
    </div>
</div>


